C51 COMPILER V9.54   MYLCD1602                                                             03/28/2023 22:34:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MYLCD1602
OBJECT MODULE PLACED IN .\Objects\myLCD1602.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE myLCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -yLCD1602.lst) TABS(2) OBJECT(.\Objects\myLCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit LCD_RS=P2^6;
   4          sbit LCD_WR=P2^5;
   5          sbit LCD_EN=P2^7;
   6          #define LCD_DataPort P0
   7          
   8          void Delay1ms()   //@11.0592MHz
   9          {
  10   1        unsigned char i, j;
  11   1      
  12   1        i = 2;
  13   1        j = 199;
  14   1        do
  15   1        {
  16   2          while (--j);
  17   2        } while (--i);
  18   1      }
  19          
  20          unsigned int getPow(unsigned char x,unsigned char pow)
  21          {
  22   1        unsigned int result=1;
  23   1        
  24   1        while(pow--){result *= x;}
  25   1        
  26   1        return result;
  27   1      }
  28          
  29          /**
  30            * @brief 将一个指令发送给LCD1602
  31            * @param 要执行命令
  32            * @retval 无
  33            */
  34          void WriteCommand(unsigned char command)
  35          {
  36   1        LCD_RS = 0;
  37   1        LCD_WR = 0;
  38   1        LCD_DataPort = command;
  39   1        LCD_EN = 1;
  40   1        Delay1ms();
  41   1        LCD_EN = 0;
  42   1        Delay1ms();
  43   1      }
  44          
  45          /**
  46            * @brief 将一个数据（字符）发送给LCD1602
  47            * @param 要发送的字符
  48            * @retval 无
  49            */
  50          void WriteData(unsigned char Data)
  51          {
  52   1        LCD_RS = 1;
  53   1        LCD_WR = 0;
  54   1        LCD_DataPort = Data;
C51 COMPILER V9.54   MYLCD1602                                                             03/28/2023 22:34:00 PAGE 2   

  55   1        LCD_EN = 1;
  56   1        Delay1ms();
  57   1        LCD_EN = 0;
  58   1        Delay1ms();
  59   1      }
  60          
  61          /**
  62            * @brief 设置光标位置
  63            * @param 行号，列号
  64            * @retval 无
  65            */
  66          void setAC(unsigned char line,unsigned char column)
  67          {
  68   1        unsigned char Address;
  69   1        if(line == 1){Address = 0x80|(column-1);}
  70   1        else if(line == 2){Address = 0xC0|(column-1);}
  71   1        WriteCommand(Address);
  72   1      }
  73          
  74          /**
  75            * @brief LCD1602的初始化（）设置光标，数据模式等
  76            * @param 无
  77            * @retval 无
  78            */
  79          void LCD_Init(void)
  80          {
  81   1        WriteCommand(0x38);
  82   1        WriteCommand(0x0C);
  83   1        WriteCommand(0x06);
  84   1        WriteCommand(0x01);
  85   1      }
  86          
  87          /**
  88            * @brief 在LCD上指定位置显示一个字符
  89            * @param 行号，列号，字符
  90            * @retval 无
  91            */
  92          void LCD_ShowChar(unsigned char line,unsigned char column,unsigned char Char)
  93          {
  94   1        setAC(line,column);
  95   1        WriteData(Char);
  96   1      }
  97          
  98          /**
  99            * @brief 在指定位置显示字符串
 100            * @param 行号，列号，字符串
 101            * @retval 无
 102            */
 103          void LCD_ShowString(unsigned char line,unsigned char column,unsigned char string[])
 104          {
 105   1        unsigned char i;
 106   1        setAC(line,column);
 107   1        
 108   1        for(i=0;string[i]!='\0';i++)
 109   1        {WriteData(string[i]);}
 110   1      }
 111          
 112          /**
 113            * @brief 显示无符号数字
 114            * @param 行号，列号，无符号数字，长度
 115            * @retval 无
 116            */
C51 COMPILER V9.54   MYLCD1602                                                             03/28/2023 22:34:00 PAGE 3   

 117          void LCD_ShowNum(unsigned char line,unsigned char column,unsigned int num,unsigned char length)
 118          {
 119   1        setAC(line,column);
 120   1        while(length)
 121   1        {
 122   2          WriteData((num/getPow(10, --length))%10+'0');
 123   2        }
 124   1      }
 125          
 126          /**
 127            * @brief 在指定位置显示一个有符号数
 128            * @param 行号，列号，有符号数字，长度
 129            * @retval 无
 130            */
 131          void LCD_ShowSignedNum(unsigned char line,unsigned char column,int num,unsigned char length)
 132          {
 133   1        unsigned int number;
 134   1        setAC(line,column);
 135   1        
 136   1        if(num>=0){number = num;WriteData('+');}
 137   1        else {number = -num;WriteData('-');}
 138   1        while(length)
 139   1        {
 140   2          WriteData((number/getPow(10, --length))%10+'0');
 141   2        }
 142   1      }
 143          
 144          /**
 145            * @brief 在指定位置显示一个数字（十六进制）
 146            * @param 行号，列号，无符号数字，长度
 147            * @retval 无
 148            */
 149          void LCD_ShowHexNum(unsigned char line,unsigned char column,unsigned int num,unsigned char length)
 150          {
 151   1        unsigned char HexNum;
 152   1        setAC(line,column);
 153   1      
 154   1        while(length)
 155   1        {
 156   2          HexNum = (num/getPow(16, --length))%16;
 157   2          if(HexNum<10){WriteData(HexNum+'0');}
 158   2          else {WriteData(HexNum-10+'A');}
 159   2        }
 160   1      }
 161          
 162          /**
 163            * @brief 在指定位置显示一个数字（二进制）
 164            * @param 行号，列号，无符号数字，长度
 165            * @retval 无
 166            */
 167          void LCD_ShowBinNum(unsigned char line,unsigned char column,unsigned char num,unsigned char length)
 168          {
 169   1        unsigned char BinNum;
 170   1        setAC(line,column);
 171   1      
 172   1        while(length)
 173   1        {
 174   2          BinNum = (num/getPow(2, --length))%2;
 175   2          WriteData(BinNum+'0');
 176   2        }
 177   1      }

C51 COMPILER V9.54   MYLCD1602                                                             03/28/2023 22:34:00 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
